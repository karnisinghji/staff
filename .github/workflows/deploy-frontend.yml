#name: Deploy Frontend to GitHub Pages
#
#on:
#  push:
#    branches: [ main ]
#    paths:
#      - 'frontend/**'
#      - '.github/workflows/deploy-frontend.yml'
#
#permissions:
#  contents: write
#
#concurrency:
#  group: pages-${{ github.ref }}
#  cancel-in-progress: true
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'
#          cache: 'npm'
#          cache-dependency-path: frontend/package-lock.json
#
#      - name: Prep npm env
#        run: |
#          echo "Using temp HOME: $RUNNER_TEMP"
#          mkdir -p "$RUNNER_TEMP/npm-cache"
#          : > "$RUNNER_TEMP/empty-npmrc"
#        env:
#          RUNNER_TEMP: ${{ runner.temp }}
#
#      - name: Verify npm is healthy
#        env:
#          HOME: ${{ runner.temp }}
#          NPM_CONFIG_CACHE: ${{ runner.temp }}/npm-cache
#          NPM_CONFIG_USERCONFIG: ${{ runner.temp }}/empty-npmrc
#          NPM_CONFIG_GLOBALCONFIG: /dev/null
#        run: |
#          npm --version
#          node --version
#          npm cache verify
#
#      - name: Install dependencies
#        working-directory: ./frontend
#        env:
#          HOME: ${{ runner.temp }}
#          NPM_CONFIG_CACHE: ${{ runner.temp }}/npm-cache
#          NPM_CONFIG_USERCONFIG: ${{ runner.temp }}/empty-npmrc
#          NPM_CONFIG_GLOBALCONFIG: /dev/null
#        run: npm ci
#
#      - name: Build
#        working-directory: ./frontend
#        env:
#          HOME: ${{ runner.temp }}
#          NPM_CONFIG_CACHE: ${{ runner.temp }}/npm-cache
#          NPM_CONFIG_USERCONFIG: ${{ runner.temp }}/empty-npmrc
#          NPM_CONFIG_GLOBALCONFIG: /dev/null
#        run: npm run build
#
#      - name: Deploy to GitHub Pages
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./frontend/dist




name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      HOME: ${{ runner.temp }}
      NPM_CONFIG_CACHE: ${{ runner.temp }}/npm-cache
      NPM_CONFIG_USERCONFIG: ${{ runner.temp }}/empty-npmrc
      NPM_CONFIG_GLOBALCONFIG: /dev/null
      NPM_CONFIG_PROJECTCONFIG: ${{ runner.temp }}/empty-npmrc  # <-- key line

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Prep npm env
        run: |
          echo "Using temp HOME: $RUNNER_TEMP"
          mkdir -p "$RUNNER_TEMP/npm-cache"
          : > "$RUNNER_TEMP/empty-npmrc"
        env:
          RUNNER_TEMP: ${{ runner.temp }}

      - name: Verify npm is healthy
        run: |
          npm --version
          node --version
          npm cache verify

      # Optional: If you prefer instead of PROJECTCONFIG, physically disable repo .npmrc
      # - name: Disable repo .npmrc temporarily
      #   run: |
      #     mv .npmrc .npmrc.disabled 2>/dev/null || true
      #     mv frontend/.npmrc frontend/.npmrc.disabled 2>/dev/null || true

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci --userconfig "$NPM_CONFIG_USERCONFIG" --globalconfig "$NPM_CONFIG_GLOBALCONFIG"

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Create 404 for SPA (optional)
        run: cp ./frontend/dist/index.html ./frontend/dist/404.html || true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/dist
          enable_jekyll: false

