name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      # Create a fresh package.json without Capacitor
      - name: Create fresh package.json without Capacitor
        working-directory: ./frontend
        run: |
          echo "Creating clean package.json without Capacitor..."
          # Extract only needed dependencies without Capacitor
          jq '{
            "name": .name,
            "version": .version,
            "private": true,
            "type": "module",
            "scripts": .scripts,
            "dependencies": (
              .dependencies | 
              del(.["@capacitor/android"]) | 
              del(.["@capacitor/cli"]) | 
              del(.["@capacitor/core"]) | 
              del(.["@capacitor/ios"])
            ),
            "devDependencies": (
              .devDependencies | 
              del(.["@capacitor/cli"]) |
              del(.["@capacitor/core"])
            )
          }' package.json > clean-package.json
          
          # Show the clean package.json
          echo "Clean package.json created:"
          cat clean-package.json
          
          # Replace original with clean one
          mv clean-package.json package.json
          
          # Remove any Capacitor config files
          rm -f capacitor.config.ts capacitor.config.json .capacitorrc* android/capacitor.settings.gradle ios/App/capacitor.config.json || true
          
          # Create clean env files
          echo "VITE_DEMO_MODE=false" > .env.production
          echo "NODE_ENV=production" > .env

      # Create a separate folder for clean install
      - name: Setup clean build directory
        run: |
          mkdir -p clean-frontend
          cp -r frontend/src frontend/public frontend/index.html frontend/package.json frontend/vite.config.ts frontend/.env* clean-frontend/
          ls -la clean-frontend

      # Install dependencies in clean directory
      - name: Install dependencies
        working-directory: ./clean-frontend
        run: |
          npm install --no-package-lock
          npm list --depth=0

      # Build in clean directory
      - name: Build
        working-directory: ./clean-frontend
        run: |
          npm run build
          ls -la dist

      # Create 404.html fallback for SPA routing
      - name: Create 404 for SPA
        working-directory: ./clean-frontend
        run: cp dist/index.html dist/404.html || true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./clean-frontend/dist
          enable_jekyll: false