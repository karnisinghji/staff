name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'

permissions:
  contents: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Install Yarn
      - name: Enable Corepack and setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@stable --activate

      # Remove Capacitor from package.json
      - name: Remove Capacitor dependencies
        working-directory: ./frontend
        run: |
          echo "Removing Capacitor from package.json..."
          jq 'del(.dependencies["@capacitor/android"]) | 
              del(.dependencies["@capacitor/cli"]) | 
              del(.dependencies["@capacitor/core"]) | 
              del(.dependencies["@capacitor/ios"]) |
              del(.devDependencies["@capacitor/cli"]) |
              del(.devDependencies["@capacitor/core"])' package.json > package.temp.json
          mv package.temp.json package.json
          
          # Remove Capacitor config files
          rm -f capacitor.config.ts capacitor.config.json .capacitorrc* || true
          rm -rf android ios || true
          
          # Create production env with Railway URLs
          cat > .env.production << 'EOF'
          VITE_MODE=production
          VITE_DEMO_MODE=false
          
          # Production Backend URLs - Railway
          VITE_AUTH_SERVICE_URL=https://simple-auth-service-production.up.railway.app
          VITE_USER_SERVICE_URL=https://user-service-production.up.railway.app
          VITE_MATCHING_SERVICE_URL=https://matching-service-production.up.railway.app
          VITE_COMMUNICATION_SERVICE_URL=https://communication-service-production.up.railway.app
          VITE_NOTIFICATION_SERVICE_URL=https://notification-service-production.up.railway.app
          
          # WebSocket URLs
          VITE_WS_COMMUNICATION_URL=wss://communication-service-production.up.railway.app/ws
          VITE_WS_NOTIFICATION_URL=wss://notification-service-production.up.railway.app/ws
          EOF
          
          echo "Modified package.json:"
          cat package.json

      # Install with Yarn (bypasses npm config loading issues)
      - name: Install dependencies with Yarn
        working-directory: ./frontend
        run: |
          # Create a minimal yarn.lock to prevent workspace detection
          touch yarn.lock
          # Install without workspaces - only frontend dependencies
          yarn install --no-immutable || yarn install
          echo "Dependencies installed successfully"

      # Build
      - name: Build
        working-directory: ./frontend
        run: |
          yarn build --mode production
          ls -la dist
          echo "Build completed successfully"

      # Stamp HTML with build metadata to force CDN cache refresh
      - name: Stamp HTML with build info
        run: |
          echo "🏷️  Injecting build metadata into HTML..."
          node scripts/stamp-html.js
          echo "✅ HTML stamped with SHA: $(git rev-parse --short HEAD)"
          echo "📄 Verifying stamped HTML:"
          grep -A 3 "Build Info" frontend/dist/index.html || echo "⚠️  Build stamp not found"

      # Create 404.html fallback for SPA routing
      - name: Create 404 for SPA
        working-directory: ./frontend
        run: cp dist/index.html dist/404.html || true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/dist
          enable_jekyll: false