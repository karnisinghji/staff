version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: platform-postgres
    environment:
      POSTGRES_DB: contractor_worker_platform
      POSTGRES_USER: platform_user
      POSTGRES_PASSWORD: platform_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/
    networks:
      - platform-network

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: platform-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@platform.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - platform-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: platform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - platform-network

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: platform-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - AUTH_SERVICE_URL=http://auth-service:3001
      - USER_SERVICE_URL=http://user-service:3002
      - MATCHING_SERVICE_URL=http://matching-service:3003
      - COMMUNICATION_SERVICE_URL=http://communication-service:3004
      - NOTIFICATION_SERVICE_URL=http://notification-service:3005
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

  # Auth Service
  auth-service:
    build:
      context: ./backend/services/auth-service
      dockerfile: Dockerfile
    container_name: platform-auth
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://platform_user:platform_password@postgres:5432/contractor_worker_platform
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

  # User Service
  user-service:
    build:
      context: ./backend/services/user-service
      dockerfile: Dockerfile
    container_name: platform-user
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://platform_user:platform_password@postgres:5432/contractor_worker_platform
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

  # Matching Service
  matching-service:
    build:
      context: ./backend/services/matching-service
      dockerfile: Dockerfile
    container_name: platform-matching
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://platform_user:platform_password@postgres:5432/contractor_worker_platform
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

  # Communication Service
  communication-service:
    build:
      context: ./backend/services/communication-service
      dockerfile: Dockerfile
    container_name: platform-communication
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://platform_user:platform_password@postgres:5432/contractor_worker_platform
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

  # Notification Service
  notification-service:
    build:
      context: ./backend/services/notification-service
      dockerfile: Dockerfile
    container_name: platform-notification
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://platform_user:platform_password@postgres:5432/contractor_worker_platform
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - platform-network

volumes:
  postgres_data:
  redis_data:

networks:
  platform-network:
    driver: bridge