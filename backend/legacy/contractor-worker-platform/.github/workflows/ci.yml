name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: platform_user
          POSTGRES_PASSWORD: platform_password
          POSTGRES_DB: contractor_worker_platform
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U platform_user" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    env:
      DATABASE_URL: postgres://platform_user:platform_password@localhost:5432/contractor_worker_platform
      REDIS_URL: redis://localhost:6379
      JWT_SECRET: your-super-secret-jwt-key
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies (API Gateway)
        run: |
          cd backend/api-gateway
          npm ci
      - name: Lint API Gateway
        run: |
          cd backend/api-gateway
          npm run lint || echo "Lint warnings only"
      - name: Build API Gateway
        run: |
          cd backend/api-gateway
          npm run build
      - name: Run API Gateway tests
        run: |
          cd backend/api-gateway
          npm test
      - name: Install dependencies (Matching Service)
        run: |
          cd backend/services/matching-service
          npm ci
      - name: Lint Matching Service
        run: |
          cd backend/services/matching-service
          npm run lint || echo "Lint warnings only"
      - name: Build Matching Service
        run: |
          cd backend/services/matching-service
          npm run build
      - name: Run DB migrations
        run: |
          cd backend/services/matching-service
          npx sequelize-cli db:migrate || \
          psql -h localhost -U platform_user -d contractor_worker_platform -f database/migrations/002_admin_settings.sql
      - name: Run Matching Service tests
        run: |
          cd backend/services/matching-service
          npm test
