╔════════════════════════════════════════════════════════════════════╗
║                                                                    ║
║     🚀 SETUP RAILWAY GITHUB INTEGRATION (AUTO-DEPLOY)              ║
║                                                                    ║
╚════════════════════════════════════════════════════════════════════╝

This is the EASIEST way to enable automatic deployments!
No GitHub Actions configuration needed.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 PREREQUISITES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ GitHub repo: karnisinghji/staff
✅ Railway account with 5 services already created
✅ Services currently deployed manually

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔧 SETUP STEPS (15 minutes total)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SERVICE 1: auth-service
────────────────────────────────────────────────────────────────

1. Open: https://railway.app/dashboard
2. Click on: auth-service-production-d5c8
3. Click "Settings" tab (left sidebar)
4. Scroll to "Service Source" section
5. Click "Connect GitHub Repo"
6. Select repository: karnisinghji/staff
7. Set Watch Paths: backend/services/auth-service/**
8. Set Root Directory: backend/services/auth-service
9. Set Build Command: npm run build
10. Set Start Command: npm start
11. Click "Deploy Now"

✅ Done! Auth service will now auto-deploy on push.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SERVICE 2: user-service
────────────────────────────────────────────────────────────────

1. Click on: user-service-production-f141
2. Click "Settings" tab
3. Scroll to "Service Source"
4. Click "Connect GitHub Repo"
5. Select: karnisinghji/staff
6. Watch Paths: backend/services/user-service/**
7. Root Directory: backend/services/user-service
8. Build Command: npm run build
9. Start Command: npm start
10. Click "Deploy Now"

✅ Done!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SERVICE 3: matching-service
────────────────────────────────────────────────────────────────

1. Click on: matching-service-production
2. Click "Settings" tab
3. Scroll to "Service Source"
4. Click "Connect GitHub Repo"
5. Select: karnisinghji/staff
6. Watch Paths: backend/services/matching-service/**
7. Root Directory: backend/services/matching-service
8. Build Command: npm run build
9. Start Command: npm start
10. Click "Deploy Now"

✅ Done!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SERVICE 4: communication-service
────────────────────────────────────────────────────────────────

1. Click on: communication-service-production-c165
2. Click "Settings" tab
3. Scroll to "Service Source"
4. Click "Connect GitHub Repo"
5. Select: karnisinghji/staff
6. Watch Paths: backend/services/communication-service/**
7. Root Directory: backend/services/communication-service
8. Build Command: npm run build
9. Start Command: npm start
10. Click "Deploy Now"

✅ Done!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SERVICE 5: notification-service
────────────────────────────────────────────────────────────────

1. Click on: notification-service-production-8738
2. Click "Settings" tab
3. Scroll to "Service Source"
4. Click "Connect GitHub Repo"
5. Select: karnisinghji/staff
6. Watch Paths: backend/services/notification-service/**
7. Root Directory: backend/services/notification-service
8. Build Command: npm run build
9. Start Command: npm start
10. Click "Deploy Now"

✅ Done! All 5 services configured!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🧪 TESTING AUTO-DEPLOY
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Make a small change to any service (e.g., update a comment)
2. Commit and push to main:
   git add .
   git commit -m "test: trigger auto-deploy"
   git push origin main

3. Watch Railway dashboard:
   - Go to the service page
   - Click "Deployments" tab
   - You should see a new deployment in progress!

4. Check logs:
   - Click on the deployment
   - View build logs
   - Verify deployment succeeds

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
⚙️  ADVANCED CONFIGURATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Deploy on PR (Optional)
────────────────────────────────────────────────────────────────

In Railway Settings:
- Enable "Deploy on PR"
- Railway will create preview deployments for pull requests
- Great for testing before merging!

Custom Branch
────────────────────────────────────────────────────────────────

Default: main branch
To change:
- Settings → Source → Branch
- Select different branch (e.g., production, staging)

Build/Start Command Overrides
────────────────────────────────────────────────────────────────

If your package.json has different scripts:
- Settings → Build Command: <your custom build command>
- Settings → Start Command: <your custom start command>

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 BENEFITS OF RAILWAY GITHUB INTEGRATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ Automatic deployments on push to main
✅ No GitHub Actions configuration needed
✅ No secrets to manage
✅ Built-in deployment logs in Railway
✅ Rollback support (click to redeploy previous version)
✅ Environment variables managed in Railway
✅ Preview deployments for PRs (optional)
✅ Deploy notifications in Railway dashboard
✅ No workflow file maintenance

VS GitHub Actions:
❌ Requires workflow configuration
❌ Need to manage RAILWAY_TOKEN secret
❌ More complex to debug
❌ Need to update workflows when structure changes

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎯 CURRENT DEPLOYMENT WORKFLOW (AFTER SETUP)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Make code changes locally
2. Test locally: cd backend/services/[service] && npm run dev
3. Commit changes: git commit -m "feat: your changes"
4. Push to GitHub: git push origin main
5. ✨ Railway automatically detects push
6. 🏗️ Railway builds & deploys services
7. ✅ Services live in 2-3 minutes
8. 🧪 Test at: https://comeondost.web.app

No manual railway up needed anymore!

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
⚠️  IMPORTANT NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Watch Paths Matter!
   Only deploy when files in that service change.
   Don't use backend/** (too broad)
   Use: backend/services/[service-name]/**

2. Shared Library Changes
   If you change backend/services/shared/**, you'll need to
   manually trigger redeploy of all services, OR add shared/**
   to watch paths of all services.

3. Environment Variables
   Managed in Railway, not in code.
   Each service has its own env vars in Railway dashboard.

4. First Deployment
   After setup, Railway will deploy immediately.
   Subsequent pushes will trigger auto-deploy.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📞 SUPPORT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Railway Docs: https://docs.railway.app/deploy/github-triggers
Railway Discord: https://discord.gg/railway

═══════════════════════════════════════════════════════════════════════

After completing setup, test by:
1. Update a comment in any service
2. Commit and push
3. Watch Railway dashboard
4. Verify auto-deployment works!

Then you're done! Future deployments will be automatic. 🎉

